---
title: "Data Management Project: Phase 2"
author: "Andr√©s Fiallos & Blandine Ledoux"
format: html
editor: visual
---

# Estimating the effects of connectivity in intra-EU digitally deliverable trade in services

```{r}
library(vroom)
library(eurostat)
library(here)
library(tidyverse)
```

## Data

In this project, we will merge four different datasets. The following lines of code will download and save the necessary datasets to your computer. If the files already exist, they will be loaded.

### International Trade in Services - OECD

The following data set is around 1.11gb, hence it takes sometime to download. Allow it around 5 minutes.

```{r}

source <- "https://sdmx.oecd.org/public/rest/data/OECD.SDD.TPS,DSD_BOP@DF_TIS,1.0?format=csv"
local_name <- "trade_data.csv"
local_dir <- "raw_data"
## Check if the directory exists, otherwise create
if (!dir.exists(here(local_dir))) {
  ## create the directory if needed
  dir.create(here(local_dir)) 
}
## Check if file exists, otherwise download 
if (!file.exists(here(local_dir, local_name))) {
  ## we need to download it
  trade_data <- vroom(source)
  ## let's save the file to avoid useless downloading
  vroom_write(trade_data, here(local_dir, local_name), delim = ",")
} else {
  ## we need only to load it
  trade_data <- vroom(here(local_dir, local_name))
}

```

### Annual GDP - Eurostat

```{r}
source <- "tec00001"
local_name <- "gdp_eu.csv"
local_dir <- "raw_data"

## Check if file exists, otherwise download 
if (!file.exists(here(local_dir, local_name))) {
  ## we need to download it
  gdp_eu <- get_eurostat(source, time_format = "num", stringsAsFactors = TRUE)
  
  ## let's save the file to avoid useless downloading
  vroom_write(gdp_eu, here(local_dir, local_name), delim = ",")
} else {
  ## we need only to load it
  gdp_eu <- vroom(here(local_dir, local_name))
}
```

### Internet Coverage - Eurostat

```{r}
source <- "isoc_cbs"
local_name <- "internet_eu.csv"
local_dir <- "raw_data"

## Check if file exists, otherwise download 
if (!file.exists(here(local_dir, local_name))) {
  internet_eu <- get_eurostat(source, time_format = "num", stringsAsFactors = TRUE)
  
  vroom_write(internet_eu, here(local_dir, local_name), delim = ",")
} else {
  internet_eu <- vroom(here(local_dir, local_name))
}
```

### Gravity model - CEPPI

```{r}
local_name <- "gravity_data.csv"
local_dir <- "raw_data"

if (!file.exists(here(local_dir, local_name))) {
  url <- "https://www.cepii.fr/DATA_DOWNLOAD/gravity/data/Gravity_csv_V202211.zip"
  
  download.file(url, destfile = here(local_dir,"Gravity_csv_V202211.zip"))
  unzip(here(local_dir,"Gravity_csv_V202211.zip"), exdir = here(local_dir,"gravity_data"))
  
  csv_files <- list.files(here(local_dir,"gravity_data"), full.names = TRUE)
  print(csv_files)
  
  #We need to read second element
  gravity_data <- vroom(csv_files[2]) 

  vroom_write(gravity_data, here(local_dir, local_name), delim = ",")
  
  unlink(here(local_dir,"Gravity_csv_V202211.zip"), recursive = TRUE)
  unlink(here(local_dir,"gravity_data"), recursive = TRUE)
  
} else {
  gravity_data <- vroom(here(local_dir, local_name))
}
```

## Data cleaning

#### Countries in the study

This project aims to study the digitally deliverable trade in services between member countries of the European Union. As of the date of this project, the European Union consists of 27 countries. Below is a table listing the countries included in this study, along with their corresponding ISO3 and ISO2 codes.

| Country Name | ISO3 | ISO2 |
|--------------|------|------|
| Belgium      | BEL  | BE   |
| Bulgaria     | BGR  | BG   |
| Croatia      | HRV  | HR   |
| Cyprus       | CYP  | CY   |
| Czechia      | CZE  | CZ   |
| Denmark      | DNK  | DK   |
| Estonia      | EST  | EE   |
| Finland      | FIN  | FI   |
| France       | FRA  | FR   |
| Germany      | DEU  | DE   |
| Greece       | GRC  | EL   |
| Hungary      | HUN  | HU   |
| Ireland      | IRL  | IE   |
| Italy        | ITA  | IT   |
| Latvia       | LVA  | LV   |
| Lithuania    | LTU  | LT   |
| Luxembourg   | LUX  | LU   |
| Malta        | MLT  | MT   |
| Netherlands  | NLD  | NL   |
| Poland       | POL  | PL   |
| Portugal     | PRT  | PT   |
| Romania      | ROU  | RO   |
| Slovakia     | SVK  | SK   |
| Slovenia     | SVN  | SI   |
| Spain        | ESP  | ES   |
| Sweden       | SWE  | SE   |

### Digitally deliverable services

Digitally deliverable services comprise those services which can be delivered remotely over computer networks. It is important to note that a product being digitally deliverable does not mean that it is always digitally delivered when traded internationally. Digitally deliverable trade will therefore be greater than trade that is actually digitally delivered.\
\
These statistics are compiled by aggregating relevant products available in international services trade datasets as identified in Chapter 4 of the IMF-OECD-UNCTAD-WTO Handbook on Measuring Digital Trade (2023). The following EBOPS-2010\* services categories are covered: insurance and pension services; financial services; charges for the use of intellectual property n.i.e.; telecommunications, computer and information services; research and development services; professional and management consulting services; architectural, engineering, scientific and other technical services; trade-related services; other business services n.i.e.; audio-visual and related services; health services and education services (excluding those consumed during international travel); heritage and recreational services.

\* Extracted from [UNCTAD.org](https://unctadstat.unctad.org/datacentre/reportInfo/US.DigitallyDeliverableServices)

The table below contains the service categories included as digitally deliverable services based on the IMF-OECD-UNCTAD-WTO Handbook on Measuring Digital Trade (2023).

| Service Category | EBOPS Category Code |
|-----------------------------------------------------|-------------------|
| Insurance and pension services | SF |
| Financial services | SG |
| Charges for the use of intellectual property n.i.e. | SH |
| Telecommunications, computer, and information services | SI |
| Other business services n.i.e. | SJ |
| Audio-visual and related services | SK1 |

##### Parameters

Based on the information above, find the parameters:

```{r}
eu_iso3 <- c("AUT", "BEL", "BGR", "HRV", "CYP", "CZE", "DNK", "EST", "FIN",
             "FRA", "DEU", "GRC", "HUN", "IRL", "ITA", "LVA", "LTU", "LUX" 
             ,"MLT", "NLD", "POL", "PRT", "ROU", "SVK", "SVN", "ESP", "SWE")

eu_iso2 <- c("BE", "BG", "HR", "CY", "CZ", "DK", "EE", "FI", "FR", "DE", 
          "EL", "HU", "IE", "IT", "LV", "LT", "LU", "MT", "NL", "PL", 
          "PT", "RO", "SK", "SI", "ES", "SE")

ebops_codes <- c("SF", "SG", "SH", "SI", "SJ", "SK1")

```

### Gravity_data dataset

This dataset contains trade fixed costs. The cleaning process involves filtering the data to include only the countries relevant to the study, selecting the appropriate time period (from 2013 to 2023), and retaining the following variables:

-   year

-   iso3_o

-   iso3_d

-   dist

-   contig

-   comlang_ethno

```{r}
gravity_data<- gravity_data |>
  select(year, country_id_o, country_id_d, iso3_o, iso3_d, dist, contig, comlang_ethno) |> filter(year %in% c(2013:2023), iso3_o %in% eu_iso3, iso3_d %in% eu_iso3, country_id_o != "DEU.1", country_id_d != "DEU.1") |>
  select(-country_id_o,-country_id_d)
```

The dataset spans from 2013 to 2021, but we require data up to 2023. To achieve this, we will extend the dataset by creating fields for 2022 and 2023, assigning the values from 2021 to these new years. This is feasible because the dataset contains trade fixed costs, which remain constant over time.

```{r}
gravity_data <- gravity_data %>%
  bind_rows(
    gravity_data %>%
      group_by(iso3_o, iso3_d) %>%  
      filter(year == 2021) %>%      
      mutate(year = 2022),          
    gravity_data %>%
      group_by(iso3_o, iso3_d) %>% 
      filter(year == 2021) %>%      
      mutate(year = 2023)           
  ) %>%
  arrange(iso3_o, iso3_d, year) %>%  
  ungroup() 

```

### Trade_data

```{r}
trade_data <- trade_data %>% select(c(REF_AREA,COUNTERPART_AREA,MEASURE,ACCOUNTING_ENTRY,TIME_PERIOD,OBS_VALUE,UNIT_MEASURE)) |>
  filter(UNIT_MEASURE == "USD_EXC") |>
  select(-UNIT_MEASURE) |> filter(ACCOUNTING_ENTRY != "B",
                                  MEASURE %in% ebops_codes, 
                                  REF_AREA %in% eu_iso3,
                                  COUNTERPART_AREA %in% eu_iso3,
                                  TIME_PERIOD %in% c(2013:2023))

trade_data <- trade_data %>%
  group_by(REF_AREA, COUNTERPART_AREA, TIME_PERIOD, ACCOUNTING_ENTRY) |>  
  summarise(OBS_VALUE = sum(OBS_VALUE, na.rm = TRUE)) |>
  ungroup()

```

GDP
