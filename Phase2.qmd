---
title: "Data Management Project: Phase 2"
author: "Andr√©s Fiallos & Blandine Ledoux"
format: html
editor: visual
---

# Estimating the effects of connectivity in intra-EU digitally deliverable trade in services

This script uses the following libraries:

```{r}
library(vroom)
library(eurostat)
library(here)
library(tidyverse)
```

## 1. Data download

In this project, we will merge four different datasets. This section downloads and saves the necessary datasets to your computer. If the files already exist, they will be loaded.

### International Trade in Services - OECD

The following data set is around 1.11gb, hence it takes sometime to download. Allow it around 5 minutes to download.

```{r}
source <- "https://sdmx.oecd.org/public/rest/data/OECD.SDD.TPS,DSD_BOP@DF_TIS,1.0?format=csv"
local_name <- "trade_data.csv"
local_dir <- "raw_data"
## Check if the directory exists, otherwise create
if (!dir.exists(here(local_dir))) {
  ## create the directory if needed
  dir.create(here(local_dir)) 
}
## Check if file exists, otherwise download 
if (!file.exists(here(local_dir, local_name))) {
  ## we need to download it
  trade_data <- vroom(source)
  ## let's save the file to avoid useless downloading
  vroom_write(trade_data, here(local_dir, local_name), delim = ",")
} else {
  ## we need only to load it
  trade_data <- vroom(here(local_dir, local_name))
}

```

### GDP per capita - Eurostat

```{r}
source <- "tec00001"
local_name <- "gdp_eu.csv"
local_dir <- "raw_data"

## Check if file exists, otherwise download 
if (!file.exists(here(local_dir, local_name))) {
  ## we need to download it
  gdp_eu <- get_eurostat(source, time_format = "num", stringsAsFactors = TRUE)
  
  ## let's save the file to avoid useless downloading
  vroom_write(gdp_eu, here(local_dir, local_name), delim = ",")
} else {
  ## we need only to load it
  gdp_eu <- vroom(here(local_dir, local_name))
}

```

### Internet Coverage - Eurostat

```{r}
source <- "isoc_cbs"
local_name <- "internet_eu.csv"
local_dir <- "raw_data"

## Check if file exists, otherwise download 
if (!file.exists(here(local_dir, local_name))) {
  internet_eu <- get_eurostat(source, time_format = "num", stringsAsFactors = TRUE)
  
  vroom_write(internet_eu, here(local_dir, local_name), delim = ",")
} else {
  internet_eu <- vroom(here(local_dir, local_name))
}

```

### Gravity model - CEPPI

This dataset is downloaded as a ZIP file containing several files. The code below extracts the ZIP file, identifies the relevant file, saves it, and then deletes both the ZIP file and the other extracted files. Keeping only the relevant dataset.

```{r}
local_name <- "gravity_data.csv"
local_dir <- "raw_data"

if (!file.exists(here(local_dir, local_name))) {
  url <- "https://www.cepii.fr/DATA_DOWNLOAD/gravity/data/Gravity_csv_V202211.zip"
  
  download.file(url, destfile = here(local_dir,"Gravity_csv_V202211.zip"))
  unzip(here(local_dir,"Gravity_csv_V202211.zip"), exdir = here(local_dir,"gravity_data"))
  
  csv_files <- list.files(here(local_dir,"gravity_data"), full.names = TRUE)
  print(csv_files)
  
  #We need to read second element
  gravity_data <- vroom(csv_files[2]) 

  vroom_write(gravity_data, here(local_dir, local_name), delim = ",")
  
  unlink(here(local_dir,"Gravity_csv_V202211.zip"), recursive = TRUE)
  unlink(here(local_dir,"gravity_data"), recursive = TRUE)
  
} else {
  gravity_data <- vroom(here(local_dir, local_name))
}

```

## 2. Dataset description

## 3. Units of analysis: countries and service categories

### Countries in the study

This project aims to study the digitally deliverable trade in services between member countries of the European Union. As of the date of this project, the European Union consists of 27 countries. Below is a table listing the countries included in this study, along with their corresponding ISO3 and ISO2 codes.

| Country Name | ISO3 | ISO2 |
|--------------|------|------|
| Austria      | AUT  | AT   |
| Belgium      | BEL  | BE   |
| Bulgaria     | BGR  | BG   |
| Croatia      | HRV  | HR   |
| Cyprus       | CYP  | CY   |
| Czechia      | CZE  | CZ   |
| Denmark      | DNK  | DK   |
| Estonia      | EST  | EE   |
| Finland      | FIN  | FI   |
| France       | FRA  | FR   |
| Germany      | DEU  | DE   |
| Greece       | GRC  | EL   |
| Hungary      | HUN  | HU   |
| Ireland      | IRL  | IE   |
| Italy        | ITA  | IT   |
| Latvia       | LVA  | LV   |
| Lithuania    | LTU  | LT   |
| Luxembourg   | LUX  | LU   |
| Malta        | MLT  | MT   |
| Netherlands  | NLD  | NL   |
| Poland       | POL  | PL   |
| Portugal     | PRT  | PT   |
| Romania      | ROU  | RO   |
| Slovakia     | SVK  | SK   |
| Slovenia     | SVN  | SI   |
| Spain        | ESP  | ES   |
| Sweden       | SWE  | SE   |

### Digitally deliverable services\*

Digitally deliverable services comprise those services which can be delivered remotely over computer networks. It is important to note that a product being digitally deliverable does not mean that it is always digitally delivered when traded internationally. Digitally deliverable trade will therefore be greater than trade that is actually digitally delivered.\
\
These statistics are compiled by aggregating relevant products available in international services trade datasets as identified in Chapter 4 of the IMF-OECD-UNCTAD-WTO Handbook on Measuring Digital Trade (2023). The following EBOPS-2010\* services categories are covered: insurance and pension services; financial services; charges for the use of intellectual property n.i.e.; telecommunications, computer and information services; research and development services; professional and management consulting services; architectural, engineering, scientific and other technical services; trade-related services; other business services n.i.e.; audio-visual and related services; health services and education services (excluding those consumed during international travel); heritage and recreational services.

\* Extracted from [UNCTAD.org](https://unctadstat.unctad.org/datacentre/reportInfo/US.DigitallyDeliverableServices)

The table below contains the service categories included as digitally deliverable services based on the IMF-OECD-UNCTAD-WTO Handbook on Measuring Digital Trade (2023).

| Service Category | EBOPS Category Code |
|--------------------------------------------------|----------------------|
| Insurance and pension services | SF |
| Financial services | SG |
| Charges for the use of intellectual property n.i.e. | SH |
| Telecommunications, computer, and information services | SI |
| Other business services n.i.e. | SJ |
| Audio-visual and related services | SK1 |

### Some parameters

Based on the information above, find the parameters for the data cleaning:

```{r}
eu_iso3 <- c("AUT", "BEL", "BGR", "HRV", "CYP", "CZE", "DNK", "EST", "FIN",
             "FRA", "DEU", "GRC", "HUN", "IRL", "ITA", "LVA", "LTU", "LUX" 
             ,"MLT", "NLD", "POL", "PRT", "ROU", "SVK", "SVN", "ESP", "SWE")

eu_iso2 <- c("AT","BE", "BG", "HR", "CY", "CZ", "DK", "EE", "FI", "FR", "DE", 
          "EL", "HU", "IE", "IT", "LV", "LT", "LU", "MT", "NL", "PL", 
          "PT", "RO", "SK", "SI", "ES", "SE")

ebops_codes <- c("SF", "SG", "SH", "SI", "SJ", "SK1")

```

## 4. Data Cleaning and merge

### Gravity model - CEPPI

This dataset contains trade fixed costs. The cleaning process involves filtering the data to include only the countries relevant to the study, selecting the appropriate time period (from 2013 to 2023), and retaining the following variables:

-   year

-   iso3_o

-   iso3_d

-   dist

-   contig

-   comlang_ethno

```{r}
gravity_data<- gravity_data |>
  select(year, country_id_o, country_id_d, iso3_o, iso3_d, dist, contig, comlang_ethno) |> filter(year %in% c(2013:2023), iso3_o %in% eu_iso3, iso3_d %in% eu_iso3, country_id_o != "DEU.1", country_id_d != "DEU.1") |>
  select(-country_id_o,-country_id_d)
```

The dataset spans from 2013 to 2021, but we require data up to 2023. To achieve this, we will extend the dataset by creating fields for 2022 and 2023, assigning the values from 2021 to these new years. This is feasible because the dataset contains trade fixed costs, which remain constant over time.

```{r}
gravity_data <- gravity_data |>
  bind_rows(
    gravity_data |>
      group_by(iso3_o, iso3_d)  |>  
      filter(year == 2021)  |>     
      mutate(year = 2022),          
    gravity_data |>
      group_by(iso3_o, iso3_d)  |>
      filter(year == 2021)  |>      
      mutate(year = 2023)           
  ) |>
  arrange(iso3_o, iso3_d, year)  |>  
  ungroup() 

gravity_data <- gravity_data  |>
  rename(reporter = iso3_o, partner = iso3_d)

```

### International Trade in Services - OECD

Based on the definition of digitally deliverable services provided in the IMF-OECD-UNCTAD-WTO Handbook on Measuring Digital Trade (2023), we are using OECD trade in services statistics to calculate digitally deliverable services by aggregating the relevant individual service categories into a single value. Additionally, we are retaining only the variables pertinent to our study and filtering the data to include only the countries under analysis.

```{r}
trade_data_digitally <- trade_data  |> select(c(REF_AREA,COUNTERPART_AREA,MEASURE,ACCOUNTING_ENTRY,TIME_PERIOD,OBS_VALUE,UNIT_MEASURE)) |>
  filter(UNIT_MEASURE == "USD_EXC") |>
  select(-UNIT_MEASURE) |> filter(ACCOUNTING_ENTRY != "B",
                                  MEASURE %in% ebops_codes, 
                                  REF_AREA %in% eu_iso3,
                                  COUNTERPART_AREA %in% eu_iso3,
                                  TIME_PERIOD %in% c(2013:2023))

trade_data_digitally <- trade_data_digitally  |>
  group_by(REF_AREA, COUNTERPART_AREA, TIME_PERIOD, ACCOUNTING_ENTRY) |>  
  summarise(OBS_VALUE = sum(OBS_VALUE, na.rm = TRUE)) |>
  ungroup()

```

Additionally, we are computing a second variable representing the total bilateral services trade by filtering the service category 'S' (Total Services in EBOPS). An adjusted version of this variable will be used when estimating the gravity model.

```{r}
trade_data <- trade_data  |> select(c(REF_AREA,COUNTERPART_AREA,MEASURE,ACCOUNTING_ENTRY,TIME_PERIOD,OBS_VALUE,UNIT_MEASURE)) |>
  filter(UNIT_MEASURE == "USD_EXC") |>
  select(-UNIT_MEASURE) |> filter(ACCOUNTING_ENTRY != "B",
                                  MEASURE =="S", 
                                  REF_AREA %in% eu_iso3,
                                  COUNTERPART_AREA %in% eu_iso3,
                                  TIME_PERIOD %in% c(2013:2023))

```

To finalize the cleaning of the trade data, we are renaming the variables to ensure compatibility with the other datasets, keeping in mind the need to merge all the datasets we are working with.

```{r}
trade_data <- trade_data |>
  rename(
    reporter = REF_AREA,
    partner = COUNTERPART_AREA,
    measure = MEASURE,
    flow = ACCOUNTING_ENTRY,
    year = TIME_PERIOD,
    total_services = OBS_VALUE) |>
  select(-measure)

trade_data_digitally <- trade_data_digitally |>
  rename(
    reporter = REF_AREA,
    partner = COUNTERPART_AREA,
    flow = ACCOUNTING_ENTRY,
    year = TIME_PERIOD,
    digital_value = OBS_VALUE)

```

### GDP per capita - Eurostat

The GDP per capita is included in our dataset when the variable unit is `CP_EUR_HAB`. During the data cleaning process, we filter the data to include only the relevant countries for the study, select the appropriate time period, and ensure that we are working with the correct category of the variable unit.

```{r}
#Visual inspection
#table(gdp_eu$unit)

gdp_eu <- gdp_eu |> filter(geo %in% eu_iso2,
                           unit == "CP_EUR_HAB",
                          TIME_PERIOD %in% c(2013:2023)) |>
  select(geo,TIME_PERIOD,values) |>
  rename(year = TIME_PERIOD)

```

### Internet Coverage - Eurostat

Similar to the case of GDP per capita, the internet variable we are working with is included in our dataset when `inet_spd == "MBPS_GT100"`, which captures the coverage of high-speed internet in EU countries. During the data cleaning process, we filter the data to include only the relevant countries for the study, select the appropriate time period, and ensure that we are using the correct category for the variable unit.

```{r}
#Visual inspection
# table(internet_eu$unit)
# table(internet_eu$inet_spd)
# table(internet_eu$terrtypo)

internet_eu <- internet_eu |> filter(geo %in% eu_iso2,
                           inet_spd == "MBPS_GT100",
                          TIME_PERIOD %in% c(2013:2023)) |>
  select(geo,TIME_PERIOD,values) |>
  rename(year = TIME_PERIOD)

```

### Mapping EU country codes to SDMX country codes

This section describes the process of mapping the ISO country codes used for EU member states to their corresponding SDMX (Statistical Data and Metadata Exchange) country codes. This mapping ensures consistency and compatibility between datasets, facilitating the merge in the next step.

```{r}
iso_lookup <- data.frame(iso2 = eu_iso2, iso3 = eu_iso3)

gdp_eu_reporter <- gdp_eu  |>
  left_join(iso_lookup, by = c("geo" = "iso2")) |>
  mutate(reporter = iso3) |>
  select(-iso3,-geo) |>
  rename(gdppc_reporter = values)

gdp_eu_partner<- gdp_eu  |>
  left_join(iso_lookup, by = c("geo" = "iso2")) |>
  mutate(partner= iso3) |>
    select(-iso3,-geo) |>
  rename(gdppc_partner = values)

internet_eu_reporter <- internet_eu   |>
  left_join(iso_lookup, by = c("geo" = "iso2")) |>
  mutate(reporter = iso3) |>
  select(-iso3,-geo) |>
  rename(internet_reporter = values)

internet_eu_partner <- internet_eu   |>
  left_join(iso_lookup, by = c("geo" = "iso2")) |>
  mutate(partner = iso3) |>
  select(-iso3,-geo) |>
  rename(internet_partner = values)

```

### Merging the datasets

Since `trade_data_digitally` contains the dependent variable for the analysis, the join selected for this merge will be a *left_join*, ensuring that this dataset is retained.

```{r}
trade_data <- left_join(trade_data_digitally,trade_data)
trade_data <- left_join(trade_data, gravity_data)
trade_data <- left_join(trade_data, gdp_eu_reporter)
trade_data <- left_join(trade_data, gdp_eu_partner)
trade_data <- left_join(trade_data, internet_eu_reporter)
trade_data <- left_join(trade_data, internet_eu_partner)

```

## 5. Graphical representation

The main variables of interest are the total value of digitally deliverable services traded within EU member states and the evolution of internet coverage. Figure 1 illustrates the evolution of digitally deliverable services within EU countries, contrasting this with non-digitally deliverable services in terms of exports and imports. Figure 2 presents the evolution of internet coverage in EU countries from 2013 to 2023. Both figures present an aggregate of all EU countries, Figure 2 being a simple average across all countries.

### Figure 1

```{r}


figure1_1 <- trade_data |> 
  group_by(flow,year) |>
  summarise(value = sum(digital_value, na.rm =  T)) |>
  mutate(category = "Digitally deliverable services") |>
  ungroup()


figure1_2 <- trade_data

figure1_2$non_digital <- figure1_2$total_services - figure1_2$digital_value

figure1_2 <- figure1_2 |> 
  group_by(flow,year) |>
  summarise(value = sum(non_digital, na.rm =  T)) |>
  mutate(category = "Non-digitally deliverable services") |>
   ungroup()

figure_1 <- rbind(figure1_1,figure1_2)

ggplot(figure_1, aes(x = year, y = value, color = category)) +
  facet_grid(~flow, labeller = labeller(flow = c("C" = "Exports", "D" = "Imports"))) + 
  geom_line(size =1.1) +              
  geom_point() +             
  labs(
    x = "Year", 
    y = "Trade value, millions of USD", 
    title = "Trade value by digitally deliverable and non-digitally deliverable services", 
    subtitle = "Intra EU trade from 2013 to 2022",
    color = "Category"  
  ) +
  scale_x_continuous(breaks = seq(min(figure_1$year), max(figure_1$year))) + 
  scale_y_continuous(labels = scales::comma)+ 
  theme_minimal() +         
  theme(
    legend.position = "top", 
    strip.text = element_text(size = 12),  
    panel.spacing = unit(1, "lines"),
    legend.title = element_blank(),
    axis.title = element_text(size = 14),  
    axis.text = element_text(size = 9), 
    legend.text = element_text(size = 14),  
    plot.title = element_text(size = 14))

```

### Figure 2

```{r}

figure_2_1 <- internet_eu |> 
  group_by(year) |>
  summarise(value = mean(values)) |>
  mutate(category = "EU average",
         geo = "EU") |>
  ungroup()

figure_2_2 <- internet_eu |> 
  group_by(geo,year) |>
  summarise(value = mean(values)) |>
  mutate(category = "EU member states") |>
  ungroup()

figure_2 <- rbind(figure_2_1,figure_2_2)

ggplot(figure_2, aes(x = year, y = value, group = geo)) +
  geom_line(aes(color = ifelse(category == "EU member states", "EU member states", "EU average"),
                size = ifelse(category == "EU member states", "EU member states", "EU average")), 
              show.legend = T) +  
  scale_color_manual(values = c("EU member states" = "gray","EU average"= "red")) +
scale_size_manual(values= c("EU member states" = 0.5,"EU average"= 1))+  
  labs(
    x = "Year", 
    y = "Households, %", 
    title = "Evolution of internet coverage in EU member states from 2013-2023",
    subtitle = "Percentage of households with connections faster than 100 Mbps") +
  scale_x_continuous(breaks = seq(min(figure_2$year), max(figure_2$year), 1)) +  
  theme_minimal() +   
  theme(
    legend.position = "top", 
    panel.grid.minor = element_blank(),
    legend.title = element_blank(),
    axis.title = element_text(size = 14),  
    axis.text = element_text(size = 9), 
    legend.text = element_text(size = 14),  
    plot.title = element_text(size = 14) )


```
